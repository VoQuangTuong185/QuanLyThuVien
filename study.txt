- đánh mã sách kiểu gì
- đánh mã độc giả kiểu gì (để số nên phải dùng thuật toán hay)
- làm sao để xác định độc giả mượn quá hạn
- làm sao random không trùng

- cây nhị phân tìm kiếm nhanh nhất : cây tìm kiếm nhị phân cân bằng hoàn toàn vì mỗi lần so sánh ở 1 nhánh, loại bỏ được 50% số lượng node => Log2N
=> lưu ý: k dùng thuật toán cân bằng cây mà viết thuật toán để xin số, sao cho vẫn dùng thuật toán
insert_node đưa vào cây nhị phân tìm kiếm bình thường nhưng cây vẫn là cây tự động cân bằng (cây nhị phân tìm kiếm cân bằng hoàn toàn)
=> không đi cân bằng cây

			//strcmp: 
				//return 0 neu 2 chuoi giong nhau
				//return -X , voi X la khoang cach thu tu cua ki tu chuoi 2 so voi thu tu cua ki tu chuoi 1 trong ASCII, neu ki tu dau 2 chuoi bang nhau, 
					//tiep tuc so ki tu tiep theo
				//return X, tuong tu nhu tren, nhung la chenh lech cua chuoi 1 so voi chuoi 2

- tổng số nút của cây nhị phân đầy là (2^d)-1 với d là chiều cao

- tìm kiếm trên cây nhị phân suy biến (luôn chạy về 1 phía) => không hiệu quả
 
-nắm các trường hợp khi xoá 1 nút khỏi cây tìm kiếm nhị phân

*time_t là kiểu dữ liệu, ko phải để đo đạc cái gì hết. Chữ _t nghĩa là “type”. time_t viết tắt cho time_type là kiểu dữ liệu “thời gian”.

biến kiểu time_t có giá trị là số giây tính từ epoch (1970-01-01 00:00:00 UTC)

time(0) là hàm trong thư viện ctime, nhận vào 1 con trỏ, thực hiện lưu giá trị x là số giây tính từ epoch vào nơi mà con trỏ đó trỏ tới, và trả về x. Nếu con trỏ đó là NULL thì chỉ trả về x*


Hàm int sprintf(char *str, const char *format,...) trong Thư viện C chuẩn gửi output đã được định dạng tới một chuỗi str.